x <- read.table('uctvct-time=5000.shomersu.dat', header=T)
y <- read.table('uctvct-time=7000.shomersu.dat', header=T)
plot(x$MAXVOI, x$WIN_W, type='o')
plot(x$MAXVOI, x$WIN_W, type='o', log="x")
x <- read.table('uctvct-time=5000.shomersu.dat', header=T)
y <- read.table('uctvct-time=7000.shomersu.dat', header=T)
plot(x$MAXVOI, x$WIN_W, type='o', log="x")
plot(x$MAXVOI, y$WIN_W, type='o', log="x")
plot(x$MAXVOI, x$WIN_W, type='o', log="x")
lines(x$MAXVOI, y$WIN_W, type='o')
plot(x$MAXVOI, y$WIN_W, type='o', log="x")
lines(x$MAXVOI, x$WIN_W, type='o')
y <- read.table('uctvct-time=7000.shomersu.dat', header=T)
x <- read.table('uctvct-time=5000.shomersu.dat', header=T)
plot(x$MAXVOI, y$WIN_W, type='o', log="x")
lines(x$MAXVOI, x$WIN_W, type='o')
plot(x$MAXVOI, y$WIN_W, ylim=c(0.2, 0.7), type='o', log="x")
lines(x$MAXVOI, x$WIN_W, type='o')
plot(x$MAXVOI, y$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
lines(x$MAXVOI, x$WIN_W, type='o')
lines(x$MAXVOI, 0.5, lty='dashed')
repeat
?repeat
doc(repeat)
repeat
1
rep(1, 10)
lines(x$MAXVOI, re(0.5, len(x$MAXVOI)), lty='dashed')
lines(x$MAXVOI, rep(0.5, len(x$MAXVOI)), lty='dashed')
lines(x$MAXVOI, rep(0.5, length(x$MAXVOI)), lty='dashed')
y <- read.table('uctvct-time=7000.shomersu.dat', header=T)
x <- read.table('uctvct-time=5000.shomersu.dat', header=T)
plot(x$MAXVOI, y$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
lines(x$MAXVOI, rep(0.5, length(x$MAXVOI)), lty='dashed')
rep(1, 10)
lines(x$MAXVOI, x$WIN_W, type='o')
x <- read.table('uctvct-time=5000.shomersu.dat', header=T)
y <- read.table('uctvct-time=7000.shomersu.dat', header=T)
z <- read.table('uctvct-time=10000.shomersu.dat', header=T)
t <- read.table('uctvct-time=15000.shomersu.dat', header=T)
plot(x$MAXVOI, y$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
plot(x$MAXVOI+1E-8, y$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
plot(x$MAXVOI+1E-7, y$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
lines(y$MAXVOI+1E-7, y$WIN_W, type='o')
plot(x$MAXVOI+1E-7, x$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
lines(y$MAXVOI+1E-7, y$WIN_W, type='o')
lines(y$MAXVOI+1E-7, z$WIN_W, type='o')
lines(y$MAXVOI+1E-7, t$WIN_W, type='o')
plot(x$MAXVOI+1E-8, x$WIN_W, ylim=c(0.3, 0.7), type='o', log="x")
lines(y$MAXVOI+1E-8, y$WIN_W, type='o')
lines(y$MAXVOI+1E-8, z$WIN_W, type='o')
lines(y$MAXVOI+1E-8, y$WIN_W, type='o')
lines(y$MAXVOI+1E-8, t$WIN_W, type='o')
plot(c(1,2), c(1,2), lty='2')
plot(c(1,2), c(1,2), lty=2)
plot(c(1,2), c(1,2), lty=4)
plot(c(1,2), c(1,2), lty=4)
plot(c(1,2), c(1,2), lty=c(1,2))
plot(c(1,2), c(1,2), lty=c(1,2))
plot(c(1,2), c(1,2), type=NA)
plot(c(1,2), c(1,2), type=0)
plot(c(1,2), c(1,2), draw=F)
?plot
plot(c(1,2), c(1,2), type='n')
list((1,2),(3,4))
list((1=>2))
list()
?list
list(1=2, 3=4)
?list
list('1'=2, '3'=4)
x ->list('1'=2, '3'=4)
x[[11]]
x[[1]]
x <- list('1'=2, '3'=4)
x[[1]]
source('/home/dvd/work/uct/code/figures.R')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
?expr
??expr
??equation
??expr
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
abline
abline(a=0, b=1, h=0.5)
abline(a=0, b=1, h=0.5, lty='dashed')
draw.go.curves()
abline(a=0, b=1, h=0.5, lty='dashed')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves()
X11()
draw.go.curves('ect')
draw.go.curves('ect')
draw.go.curves('ect')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves('ect')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves('ect')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves('ect')
draw.go.curves('ect')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves('ect')
source('/home/dvd/work/uct/code/figures.R')
draw.go.curves('ect')
dev.next()
draw.go.curves('vct')
dev.prev()
dev.prev()
dev.set(1)
dev.set(2)
draw.go.curves('vct')
dev.set(3)
draw.go.curves('ect')
source('/home/dvd/work/uct/code/figures.R')
dev.set(3); draw.go.curves('ect')
dev.set(2); draw.go.curves('vct')
dev.set(3); draw.go.curves('ect')
dev.set(2); draw.go.curves('vct')
dev.set(2); draw.go.curves('vct')
dev.set(3); draw.go.curves('ect')
dev.set(3); draw.go.curves('ect')
dev.set(3); draw.go.curves('ect')
quit()
y
bars <-read.table('bests.dat', headers=T)
bests <-read.table('bests.dat', header=T)
?barplot
barplot(t(as.matrix(bests)))
t(as.matrix(bests))
t(as.matrix(bests[-1,]))
t(as.matrix(bests[,-1]))
t(as.matrix(bests[,-1]))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3), beside=T, xlim=c(0.3, 0.5))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3), beside=T, ylim=c(0.3, 0.5))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3), beside=T, ylim=c(0.3, 0.5))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3), beside=T)
?legend
legend(x="topleft", legend=names(bests[-1]), cex=0.6, bty="n", fill=rainbow[3])
legend(x="topleft", names(bests)[-1], cex=0.6, bty="n", fill=rainbow[3])
legend(x="topleft", names(bests)[-1], cex=0.6, bty="n", fill=rainbow(3))
?rainbow
?palette
?rainbow
legend(x="topright", names(bests)[-1], cex=0.6, bty="n", fill=rainbow(3))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, col=rainbow(3), beside=T)
legend(x="topright", names(bests)[-1], cex=0.6, bty="n", fill=rainbow(3))
?fill
?par
?pattern
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, angle=c(45, -45, 90), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=1, angle=c(45, -45, 90), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=5, angle=c(45, -45, 90), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=5, angle=c(45, -45, 0), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=10, angle=c(45, -45, 0), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=10, angle=c(60, -60, 30), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=10, angle=c(60, -60, 30), col='black', beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(10, 10, 20), angle=c(60, -60, 30), col='black', beside=T)
legend(x="topright", names(bests)[-1], cex=0.6, bty="n", angle=c(60, -60, 30), density=c(10, 10, 20), fill='black')
legend(x="topright", names(bests)[-1], cex=3, bty="n", angle=c(60, -60, 30), density=c(10, 10, 20), fill='black')
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(10, 10, 20), fill='black')
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(10, 10, 20), angle=c(60, -60, 30), col='black', beside=T)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(10, 10, 20), fill='black')
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(10, 10, 20), fill='black', ylime=c(0.0, 0.8))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(10, 10, 20), angle=c(60, -60, 30), col='black', beside=T, ylim=c(0, 0.8))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(10, 10, 20), fill='black', ylime=c(0.0, 0.8))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(10, 10, 20), fill='black')
legend(x="topright", names(bests)[-1], cex=2, angle=c(60, -60, 30), density=c(10, 10, 20), fill='black')
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black')
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(15, 15, 30), angle=c(60, -60, 30), col='black', beside=T, ylim=c(0, 0.8))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black')
?density
?angle
?barplot
?par
?barplot
?legend
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(15, 15, 30), angle=c(60, -60, 30), col='black', beside=T, ylim=c(0, 0.8))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n")
?legend
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n", pt.cex=2)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n", pt.cex=4)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n", pt.cex=1)
?legend
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n", ncol=3)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(15, 15, 30), angle=c(60, -60, 30), col='black', beside=T, ylim=c(0, 0.6))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n", ncol=3)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(15, 15, 30), angle=c(60, -60, 30), col='black', beside=T)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(15, 15, 30), fill='black', bty="n", ncol=3)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(20, 20, 30), fill='black', bty="n", ncol=3)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(20, 20, 30), angle=c(60, -60, 30), col='black', beside=T)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(20, 20, 30), fill='black', bty="n", ncol=3)
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(20, 20, 30), fill='black', bty="n", ncol=3, fill=rainbow(3))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(20, 20, 30), bty="n", ncol=3, fill=rainbow(3))
legend(x="topright", names(bests)[-1], angle=c(60, -60, 30), density=c(20, 20, 30), fill='black', bty="n", ncol=3, bg=rainbow(3))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(20, 20, 30), angle=c(60, -60, 30), col=rainbow(3), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(20, 20, 30), angle=c(45, -60, 30), col=rainbow(3), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(20, 20, 30), angle=c(60, -45, 30), col=rainbow(3), beside=T)
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(20, 20, 30), angle=c(70, -45, 30), col=rainbow(3), beside=T)
legend(x="topright", names(bests)[-1], angle=c(70, -45, 30), density=c(20, 20, 30), fill='black', bty="n", ncol=3, bg=rainbow(3))
barplot(t(as.matrix(bests[,-1])), names.arg = bests$NSMPLS, density=c(20, 20, 30), angle=c(70, -45, 30), col=rainbow(3), beside=T)
legend(x="topright", names(bests)[-1], angle=c(70, -45, 30), density=c(20, 20, 30), fill=rainbow(3), bty="n", ncol=3, bg=rainbow(3))
source('../../code/figures.R')
go.draw.bests('bests.dat')
source('../../code/figures.R')
go.draw.bests('bests.dat')
source('../../code/figures.R')
go.draw.bests('bests.dat')
go.draw.bests('almostbests.dat')
go.draw.bests('bests.dat')
source('../../code/figures.R')
go.draw.bests('bests.dat', colors='black')
source('../../code/figures.R')
source('../../code/figures.R')
go.draw.bests('toobests.dat', colors='black')
source('../../code/figures.R')
go.draw.curves(agent='bct')
go.draw.curves(agent='bct')
dev.copy2pdf('bct.pdf', width=6, height=4)
dev.copy2pdf(file='bct.pdf', width=6, height=4)
source('../../code/figures.R')
go.draw.curves(agent='vct')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
go.draw.curves(agent='vct')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
source('../../code/figures.R')
go.draw.curves(agent='vct')
dev.copy(file="xxx.svg", device=svg)
?dev.copy
dev.copy(file="xxx.svg", device=svg)
dev.off()
dev.copy(file="xxx.svg", device=svg)
dev.copy(file="xxx.svg", device=svg)
svg.off()
svg()
?svg
dev.copy(file="xxx.svg", device=svg)
dev.off()
dev.off()
?dev.copy
go.draw.curves(agent='vct')
go.draw.curves(agent='vct')
dev.copy(file="xxx.svg", device=svg)
dev.off(dev.prev())
dev.off()
