> to find this plan and thus a_1, we need to find optimal a_2

For MDP and adversarial domains the search result is an
exponential policy/contingency plan. Hence search algorithms typically
select the best first move, then recompute after observing
environment responses. You only need the expected value of
outcomes to first actions to select the best first action. Action
contributions to this value after the first action are irrelevant.

> How is "near-optimal" for the UCB-scheme defined?

UCB1 achieves logarithmic cumulative regret uniformly over number of
samples; no policy can achieve better than logarithmic regret
(Auer, Cesa-Bianchi, Fischer 2002).

> Algorithm 1

The else branch returns `reward', sorry for omitting.
There is no discounting in this setting.

> UCB(c)

We performed experiments but omitted the figures for lack of space.

> deviations are missing in graphs

to avoid clutter; for 10000 iterations deviations were within
0.005 of the means. 

> UCT performs very similar

In Fig 2c the regret of UCT is twice the regret of UCB[sqrt]+UCT for
1000 rollouts and it takes 2000 rollouts to achieve the same regret.

> The expectation that SR+CR less sensitive to c not discussed in experiments.
> What does "minimum cost" refer to in Fig. 3b?

Experiments on sailing domain (Figures 3-5) discuss
influence of the exploration factor. In Figure 3, the experiments
were performed for a range of values of c, [0.00001 .. 1000]. For UCT,
the cost  is sensitive to c: median is much higher than minimum. 
For SR+CR, the difference is significantly smaller.
In Figures 4-5 dependency of cost on c is further explored.

> How is c chosen for UCT in Fig. 2?

  c=2, the default value for rewards in [0,1].

> How do the curves in Fig. 2,6 continue?

The figures are in log-log scale, the curves approach zero 
at rate of curve slopes at the end.

> "SR+CR differs from UCT mainly in the first step" -- where else?

The rest of rollout may use UCT or another scheme
(e.g. domain heuristics), but the advantage
of SR+CR is in the first step.

> Did not show empirical results for UCT[sqrt]

Theoretical bounds are for UCB[sqrt]; empirical
results for UCB[sqrt] are in Figure 1. Theoretical results can be extended
to SR+CR similar to (Kocsis, Szepesvari 2006).

> Very small number of rollouts is performed

The reported number of rollouts is per node which comparable with 
the total number of rollouts in the literature.

> Computer Go is the most popular domain 

Indeed, we should explain and include references.  We chose problems
on which UCT was evaluated initially. We obtained results for Go but
presenting them is far beyond the available space.

> the value of X_i is not always precise because of averaging

Right, however adaptive MCTS samples winning moves increasingly often; under
certain conditions, X_i converges to the true value.

